1674785409
waR3U4bTeM%3A8c231d1d8d33a2528dc6ce369c152a14-eadc78a31fdecf8d983bf15c909d6bbe
s:12692:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"eadc78a31fdecf8d983bf15c909d6bbe";s:39:" phpDocumentor\Reflection\Php\File name";s:11:"privacy.php";s:39:" phpDocumentor\Reflection\Php\File path";s:24:"Public/Views/privacy.php";s:41:" phpDocumentor\Reflection\Php\File source";s:8615:"<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="./Assets/css/style.css">
  <link rel="icon" type="image/svg" href="<?= IMG_PATH ?>/T_logo.svg" alt="favicon logo simplifié de TPlanner"/>
  <title>TPLanner</title>
</head>

<body>

  <header>
    <?php require_once 'layout/header.php'; ?>
  </header>

  <main>
  
  <section class="paragraph_container">
      <div class="paragraph">
        </br>
        <h1>POLITIQUE DE CONFIDENTIALITÉ</h1>
        <h2>Définitions</h2>
            <p>L’Éditeur : La personne, physique ou morale, qui édite les services de communication au public en
                ligne.</br>
                Le Site : L’ensemble des sites, pages Internet et services en ligne proposés par l’Éditeur.</br>
                L’Utilisateur : La personne utilisant le Site et les services.</p>

        <h2>Nature des données collectées</h2>
          <p>Dans le cadre de l’utilisation des Sites, l’Éditeur est susceptible de collecter les catégories de
              données suivantes concernant ses Utilisateurs :</br>
          <ul>
              <li>Données d’état-civil, d’identité, d’identification…</li>
              <li>Données relatives à la vie personnelle (habitudes de vie, situation familiale, hors données sensibles ou dangereuses)</li>
              <li>Données relatives à la vie professionnelle (CV, scolarité, formation professionnelle, distinctions…)</li>
              <li>Informations d’ordre économique et financier (revenus, situation financière, situation fiscale…) </li>
              <li>Données de connexion (adresses IP, journaux d’événements…)</li>
              <li>Données de localisation (déplacements, données GPS, GSM…)</li>
          </ul>
          </p>

        <h2>Conservation des données techniques et personnelles</h2>

          <h3>Durée de conservation des données techniques</h3>
            <p>Les données techniques sont conservées pour la durée strictement nécessaire à la réalisation des
                finalités visées ci-avant.</p>

          <h3>Suppression des données après suppression du compte</h3>
            <p>Des moyens de purge de données sont mis en place afin d’en prévoir la suppression effective dès lors que
                la durée de conservation ou d’archivage nécessaire à l’accomplissement des finalités déterminées ou
                imposées est atteinte. Conformément à la loi n°78-17 du 6 janvier 1978 relative à l’informatique, aux
                fichiers et aux libertés, vous disposez par ailleurs d’un droit de suppression sur vos données que vous
                pouvez exercer à tout moment en prenant contact avec l’Éditeur.</p>

          <h3>Suppression des données après 3 ans d’inactivité</h3>
            <p>Pour des raisons de sécurité, si vous ne vous êtes pas authentifié sur le Site pendant une période de
                trois ans, vous recevrez un e-mail vous invitant à vous connecter dans les plus brefs délais, sans quoi
                vos données seront supprimées de nos bases de données.</p>

        <h2>Formulaires de contact</h2>
          <p>Conformément à l’article 32 de la loi «Informatique et Libertés» n° 78-17 du 6 janvier 1978, modifiée par
            la loi n° 2004-801 du 6 août 2004, les informations personnelles (prénom, nom, numéro de téléphone,
            e-mail, statut social,…) recueillies via les formulaires de contact font l’objet d’un traitement
            informatique destiné seulement à ce que le responsable du traitement, seule destinataire des données,
            puisse répondre aux utilisateurs, et ce de la manière la plus appropriée, et ne seront jamais utilisées
            à des fins non prévues ni transmises à des partenaires et ne feront l’objet d’aucun transfert en dehors
            du territoire de l’Union Européenne.. Aucune information personnelle autre que celles demandées dans ce
            cadre n’est collectée à votre insu.</p>
          <p>
          <ul>Les données recueillies seront conservées 38 mois :
              <li>à compter de la collecte ou du dernier contact pour les prospects,</li>
              <li>à compter de la fin de la relation commerciale pour les clients.</li>
          </ul>
          </p>
          <p>Conformément à la loi « informatique et libertés » du 6 janvier 1978 modifiée, vous disposez des droits
              d’interrogation, d’accès, de rectification et de suppression aux informations qui vous concernent.</p>
          <p>Pour l’exercer, adressez-vous nosu un courriel </p>

        <h2>Contenu embarqué depuis d’autres sites</h2>
          <p>Les articles de ce site peuvent inclure des contenus intégrés (par exemple des vidéos, images,
              articles…). Le contenu intégré depuis d’autres sites se comporte de la même manière que si le visiteur
              se rendait sur cet autre site.</p>
          <p>Ces sites web pourraient collecter des données sur vous, utiliser des cookies, embarquer des outils de
              suivis tiers, suivre vos interactions avec ces contenus embarqués si vous disposez d’un compte connecté
              sur leur site web.</p>

        <h2>Informations supplémentaires</h2>
          <h3>Comment nous protégeons vos données</h3>
            <p>Nous nous engageons à mettre en oeuvre toutes les mesures techniques et organisationnelles appropriées
                afin de garantir un niveau de sécurité adapté au regard des risques d’accès accidentels, non autorisés
                ou illégaux, de divulgation, d’altération, de perte ou encore de destruction des données personnelles
                vous concernant. </p>
            <p>Dans l’éventualité où nous prendrions connaissance d’un accès illégal aux données personnelles vous
                concernant stockées sur nos serveurs ou ceux de nos prestataires, ou d’un accès non autorisé ayant pour
                conséquence la réalisation des risques identifiés ci-dessus, nous nous engageons à :</p>
            <p>
            <ul>Les données recueillies seront conservées 38 mois :
                <li>Vous notifier l’incident dans les plus brefs délais ;</li>
                <li>Examiner les causes de l’incident et vous en informer ;</li>
                <li>Prendre les mesures nécessaires dans la limite du raisonnable afin d’amoindrir les effets négatifs et préjudices pouvant résulter dudit incident.</li>
            </ul>
            </p>

          <h3>Limitation de la responsabilité</h3>
            <p>En aucun cas les engagements définis au point ci-dessus relatif à la notification en cas de faille de
                sécurité ne peuvent être assimilés à une quelconque reconnaissance de faute ou de responsabilité quant à
                la survenance de l’incident en question.</p>

          <h3>Retrait du Consentement concernant vos données personnelles</h3>
            <p>Vous disposez d’un droit d’accès, de modification et/ou de suppression des données vous concernant à tout
                moment en contactant l’éditeur du site.</p>
            <p>Le responsable du fichier dispose d’un délai de réponse maximal de 2 mois à compter de la demande. La
                CNIL précise : « Si la demande est incomplète (absence de la pièce d’identité par exemple), le
                responsable du fichier est en droit de demander des compléments : le délai est alors suspendu et court à
                nouveau une fois ces éléments fournis ».</p>
            <p>Les limites au droit d’accès sont précisées sur le site de la CNIL et consultables en cliquant ici.</p>

          <h3>Modification des CGU et de la politique de confidentialité</h3>
            <p>Nous nous engageons à vous informer en cas de modification substantielle des présentes CGU, et à ne pas
                baisser le niveau de confidentialité de vos données de manière substantielle sans vous en informer et
                obtenir votre consentement.</p>
          </br>
      </div>
    </section>

  </main>

  <?php require_once 'layout/footer.php'; ?>
  <script src="<?= JS_PATH ?>/globalScript.js"></script>

</body>

</html>
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";